INSERT INTO usuarios (id, nome, email, endereco, data_nascimento)
VALUES
	   (1, 'João Silva', 'joão@example.com', 'Rua A, 123, Cidade, X, Estado Y', '1990-05-15'),
	   (2, 'Maria Santos', 'maria@example.com', 'Rua B, 456, Cidade Y, Estado Z', '1985-08-22'),
	   (3, 'Pedro Souza', 'pedro@example.com', 'Avenida C, 789, Cidade X, Estado Y', '1998-02-10')
;


INSERT INTO destinos (id, nome, descricao)
VALUES (1, 'Praia do Rosa', 'Linda Praia');

INSERT INTO reservas (id, id_usuario, id_destino, data, status)
VALUES (1, 1, 1, '2023-11-11', 'pendente');

INSERT INTO reservas (id_usuario, id_destino, data, status)
values(2, 3, '2023-07-10', 'confirmada');

UPDATE usuarios
SET id=4
WHERE email='teste@teste.com';

INSERT INTO destinos (id, nome, descricao)
VALUES 
	(2, 'Cachoeira do Vale Verde', 'Uma cachoeira exuberante cercada por natureza'),
	(3, 'Cidade Histórica de Pedra Alta', 'Uma vidade rica em história e arquitetura'),
	(1, 'Praia das Tartarugas', 'Uma bela praia com areias brancas e mar cristalino');

DELETE FROM destinos
WHERE nome='Praia do Rosa';

CREATE TABLE usuarios_nova(
	id INT,
	nome VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL UNIQUE,
	endereco VARCHAR(100) NOT NULL,
	data_nascimento DATE NOT NULL
);

COMMENT ON COLUMN usuarios_nova.nome IS 'Nome do usuário';
COMMENT ON COLUMN usuarios_nova.email IS 'E-mail do usuário';
COMMENT ON COLUMN usuarios_nova.endereco IS 'Endereço do usuário';
COMMENT ON COLUMN usuarios_nova.data_nascimento IS 'Data de nascimento do usuário';

INSERT INTO usuarios_nova (id, nome, email, endereco, data_nascimento)
SELECT id, nome, email, endereco, data_nascimento FROM usuarios;

DROP TABLE usuarios;

ALTER TABLE usuarios_nova RENAME TO usuarios;

ALTER TABLE usuarios ALTER COLUMN endereco TYPE VARCHAR(150);



CREATE SEQUENCE IF NOT EXISTS id_sequence;
ALTER TABLE reservas
ALTER COLUMN id SET DEFAULT NEXTVAL('id_sequence');
SELECT setval('id_sequence', (SELECT COALESCE(MAX(id), 1)FROM reservas));

ALTER TABLE reservas ADD PRIMARY KEY(id);	
ALTER TABLE reservas 
ADD CONSTRAINT fk_reservas_destinos
FOREIGN KEY (id_destino) REFERENCES destinos(id);

DELETE FROM reservas
WHERE id=2;

ALTER TABLE reservas
ADD CONSTRAINT fk_reservas_usuarios
FOREIGN KEY (id_usuario) REFERENCES usuarios(id)
ON DELETE CASCADE;

ALTER TABLE reservas
ADD CONSTRAINT fk_reservas_destinos
FOREIGN KEY (id_destino) REFERENCES destinos(id)
ON DELETE CASCADE;

DELETE FROM destinos
WHERE id=3;
SELECT * FROM destinos;

SELECT * FROM reservas;